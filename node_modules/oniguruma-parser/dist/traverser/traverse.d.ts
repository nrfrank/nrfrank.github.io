export type Path = {
    node: import("../parser/parse.js").Node;
    parent: import("../parser/parse.js").Node | null;
    key: (number | string) | null;
    container: Array<import("../parser/parse.js").Node> | null;
    root: import("../parser/parse.js").RegexNode;
    remove: () => void;
    removeAllNextSiblings: () => Array<import("../parser/parse.js").Node>;
    removeAllPrevSiblings: () => Array<import("../parser/parse.js").Node>;
    replaceWith: (newNode: import("../parser/parse.js").Node, options?: {
        traverse?: boolean;
    }) => void;
    replaceWithMultiple: (newNodes: Array<import("../parser/parse.js").Node>, options?: {
        traverse?: boolean;
    }) => void;
    skip: () => void;
};
export type Transformer = (path: Path, state: {
    [key: string]: any;
}) => void;
/**
@typedef {{
  node: import('../parser/parse.js').Node;
  parent: import('../parser/parse.js').Node?;
  key: (number | string)?;
  container: Array<import('../parser/parse.js').Node>?;
  root: import('../parser/parse.js').RegexNode;
  remove: () => void;
  removeAllNextSiblings: () => Array<import('../parser/parse.js').Node>;
  removeAllPrevSiblings: () => Array<import('../parser/parse.js').Node>;
  replaceWith: (newNode: import('../parser/parse.js').Node, options?: {traverse?: boolean}) => void;
  replaceWithMultiple: (newNodes: Array<import('../parser/parse.js').Node>, options?: {traverse?: boolean}) => void;
  skip: () => void;
}} Path
@typedef {
  ( path: Path,
    state: {
      [key: string]: any;
    }
  ) => void
} Transformer
*/
/**
@param {import('../parser/parse.js').OnigurumaAst} ast
@param {{
  [key in ('*' | import('../parser/parse.js').NodeType)]?: Transformer | {enter?: Transformer, exit?: Transformer};
}} visitor
@param {{
  [key: string]: any;
}} [state]
*/
export function traverse(ast: import("../parser/parse.js").OnigurumaAst, visitor: { [key in ("*" | import("../parser/parse.js").NodeType)]?: Transformer | {
    enter?: Transformer;
    exit?: Transformer;
}; }, state?: {
    [key: string]: any;
}): void;
//# sourceMappingURL=traverse.d.ts.map