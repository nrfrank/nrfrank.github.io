{
  "version": 3,
  "sources": ["../../../src/optimizer/transforms/unwrap-negation-wrappers.js"],
  "sourcesContent": ["import {createCharacterSet, NodeCharacterClassKinds, NodeCharacterSetKinds, NodeQuantifierKinds, NodeTypes} from '../../parser/parse.js';\n\n/**\nUnwrap negated classes used to negate an individual character set.\nAllows independently controlling this behavior and avoiding logic duplication in\n`unwrapUselessClasses` and `unnestUselessClasses`.\n*/\nconst unwrapNegationWrappers = {\n  CharacterClass({node, parent, replaceWith}) {\n    const {kind, negate, elements} = node;\n    const kid = elements[0];\n    if (\n      !negate ||\n      kind !== NodeCharacterClassKinds.union ||\n      elements.length !== 1\n    ) {\n      return;\n    }\n    // Don't need to check if `kind` is in `universalCharacterSetKinds` because all character\n    // sets valid in classes are in that set\n    if (kid.type === NodeTypes.CharacterSet) {\n      kid.negate = !kid.negate;\n      // Might unnest into a class or unwrap into a non-class\n      replaceWith(kid);\n    } else if (\n      parent.type !== NodeTypes.CharacterClass &&\n      kid.type === NodeTypes.Character &&\n      kid.value === 10 // '\\n'\n    ) {\n      if (parent.type === NodeTypes.Quantifier && parent.kind !== NodeQuantifierKinds.lazy) {\n        // Avoid introducing a trigger for an Oniguruma bug; see <github.com/rosshamish/kuskus/issues/209>\n        return;\n      }\n      // `[^\\n]` -> `\\N`; can only use `\\N` if not in a class\n      replaceWith(createCharacterSet(NodeCharacterSetKinds.newline, {negate: true}));\n    }\n  },\n};\n\nexport {\n  unwrapNegationWrappers,\n};\n"],
  "mappings": "aAAA,OAAQ,sBAAAA,EAAoB,2BAAAC,EAAyB,yBAAAC,EAAuB,uBAAAC,EAAqB,aAAAC,MAAgB,wBAOjH,MAAMC,EAAyB,CAC7B,eAAe,CAAC,KAAAC,EAAM,OAAAC,EAAQ,YAAAC,CAAW,EAAG,CAC1C,KAAM,CAAC,KAAAC,EAAM,OAAAC,EAAQ,SAAAC,CAAQ,EAAIL,EAC3BM,EAAMD,EAAS,CAAC,EACtB,GACE,GAACD,GACDD,IAASR,EAAwB,OACjCU,EAAS,SAAW,IAMtB,GAAIC,EAAI,OAASR,EAAU,aACzBQ,EAAI,OAAS,CAACA,EAAI,OAElBJ,EAAYI,CAAG,UAEfL,EAAO,OAASH,EAAU,gBAC1BQ,EAAI,OAASR,EAAU,WACvBQ,EAAI,QAAU,GACd,CACA,GAAIL,EAAO,OAASH,EAAU,YAAcG,EAAO,OAASJ,EAAoB,KAE9E,OAGFK,EAAYR,EAAmBE,EAAsB,QAAS,CAAC,OAAQ,EAAI,CAAC,CAAC,CAC/E,EACF,CACF,EAEA,OACEG,KAAA",
  "names": ["createCharacterSet", "NodeCharacterClassKinds", "NodeCharacterSetKinds", "NodeQuantifierKinds", "NodeTypes", "unwrapNegationWrappers", "node", "parent", "replaceWith", "kind", "negate", "elements", "kid"]
}
