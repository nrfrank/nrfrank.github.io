export type OptimizationName = "alternationToClass" | "dedupeClasses" | "extractPrefix" | "extractPrefix2" | "removeEmptyGroups" | "removeUselessFlags" | "unnestUselessClasses" | "unwrapNegationWrappers" | "unwrapUselessClasses" | "unwrapUselessGroups" | "useShorthands" | "useUnicodeAliases" | "useUnicodeProps";
/**
@typedef {
  'alternationToClass' |
  'dedupeClasses' |
  'extractPrefix' |
  'extractPrefix2' |
  'removeEmptyGroups' |
  'removeUselessFlags' |
  'unnestUselessClasses' |
  'unwrapNegationWrappers' |
  'unwrapUselessClasses' |
  'unwrapUselessGroups' |
  'useShorthands' |
  'useUnicodeAliases' |
  'useUnicodeProps'
} OptimizationName
*/
export const optimizations: Map<string, {
    '*'({ node }: {
        node: any;
    }): void;
}>;
//# sourceMappingURL=optimizations.d.ts.map