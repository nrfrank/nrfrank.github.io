{
  "version": 3,
  "sources": ["../../../src/optimizer/transforms/unwrap-useless-classes.js"],
  "sourcesContent": ["import {NodeCharacterClassKinds, NodeTypes} from '../../parser/parse.js';\n\n/**\nUnwrap outermost non-negated character classes containing a single character or character set.\nSee also `unwrapNegationWrappers`.\n*/\nconst unwrapUselessClasses = {\n  CharacterClass({node, parent, replaceWith}) {\n    const {kind, negate, elements} = node;\n    const kid = elements[0];\n    if (\n      parent.type === NodeTypes.CharacterClass ||\n      negate ||\n      kind !== NodeCharacterClassKinds.union ||\n      elements.length !== 1 ||\n      (kid.type !== NodeTypes.Character && kid.type !== NodeTypes.CharacterSet)\n    ) {\n      return;\n    }\n    replaceWith(kid, {traverse: true});\n  },\n};\n\nexport {\n  unwrapUselessClasses,\n};\n"],
  "mappings": "aAAA,OAAQ,2BAAAA,EAAyB,aAAAC,MAAgB,wBAMjD,MAAMC,EAAuB,CAC3B,eAAe,CAAC,KAAAC,EAAM,OAAAC,EAAQ,YAAAC,CAAW,EAAG,CAC1C,KAAM,CAAC,KAAAC,EAAM,OAAAC,EAAQ,SAAAC,CAAQ,EAAIL,EAC3BM,EAAMD,EAAS,CAAC,EAEpBJ,EAAO,OAASH,EAAU,gBAC1BM,GACAD,IAASN,EAAwB,OACjCQ,EAAS,SAAW,GACnBC,EAAI,OAASR,EAAU,WAAaQ,EAAI,OAASR,EAAU,cAI9DI,EAAYI,EAAK,CAAC,SAAU,EAAI,CAAC,CACnC,CACF,EAEA,OACEP,KAAA",
  "names": ["NodeCharacterClassKinds", "NodeTypes", "unwrapUselessClasses", "node", "parent", "replaceWith", "kind", "negate", "elements", "kid"]
}
