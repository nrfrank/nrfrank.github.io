---
import { type CollectionEntry } from 'astro:content';
import ArrowRight from '../icons/ArrowRight.astro';
import FormattedDate from './FormattedDate.astro';

type Props = { project: CollectionEntry<'projects'>; class?: string; headingLevel?: 'h2' | 'h3' };

const { project, class: className, headingLevel = 'h2' } = Astro.props;
const {
  title,
  description,
  lastUpdated,
  repository,
  primaryLanguage,
  technologies,
  status,
  category,
  stats,
} = project.data;
const TitleTag = headingLevel;

// Format the status for display
const statusLabels = {
  active: 'Active',
  maintenance: 'Maintenance',
  archived: 'Archived',
  prototype: 'Prototype',
};

// Format the category for display
const categoryLabels = {
  library: 'Library',
  application: 'Application',
  tool: 'Tool',
  experiment: 'Experiment',
  research: 'Research',
};

// Get status color classes
const statusColors = {
  active: 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200',
  maintenance: 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200',
  archived: 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200',
  prototype: 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200',
};

// Language colors (simplified set)
const languageColors: { [key: string]: string } = {
  JavaScript: 'bg-yellow-500',
  TypeScript: 'bg-blue-600',
  Python: 'bg-green-600',
  Java: 'bg-orange-600',
  Go: 'bg-cyan-500',
  Rust: 'bg-orange-800',
  Ruby: 'bg-red-600',
  PHP: 'bg-purple-600',
  'C++': 'bg-blue-800',
  'C#': 'bg-purple-700',
  Swift: 'bg-orange-500',
  Kotlin: 'bg-violet-600',
};
---

<a
  class:list={[
    'group border-main block rounded-lg border p-6 transition-all duration-200',
    'border-l-accent-main border-l-4',
    'hover:bg-muted hover:border-l-accent-hover',
    '!no-underline hover:!no-underline',
    className,
  ]}
  href={repository.url}
  target="_blank"
  rel="noopener noreferrer"
>
  <div class="w-full">
    <div class="mb-1 flex items-start justify-between gap-2">
      <TitleTag
        class="font-serif text-xl leading-tight font-medium group-hover:underline group-hover:decoration-dashed group-hover:decoration-1 group-hover:underline-offset-4 sm:text-2xl"
      >
        {title}
      </TitleTag>
      <div class="flex flex-shrink-0 gap-1">
        <span class={`inline-block px-2 py-1 text-xs rounded-full ${statusColors[status]}`}>
          {statusLabels[status]}
        </span>
      </div>
    </div>

    <div class="mt-1 text-sm leading-normal text-neutral-600 dark:text-neutral-400">
      <span class="font-medium">{repository.name}</span>
      {
        primaryLanguage && (
          <>
            <span class="mx-1">‚Ä¢</span>
            <span class="inline-flex items-center gap-1">
              <span
                class={`inline-block h-2 w-2 rounded-full ${languageColors[primaryLanguage] || 'bg-gray-500'}`}
              />
              {primaryLanguage}
            </span>
          </>
        )
      }
      {
        lastUpdated && (
          <>
            <span class="mx-1">‚Ä¢</span>
            <span>
              Updated <FormattedDate date={lastUpdated} />
            </span>
          </>
        )
      }
    </div>

    {description && <div class="mt-3 text-sm leading-normal">{description}</div>}

    {
      stats && (
        <div class="mt-2 flex items-center gap-3 text-xs text-neutral-500 dark:text-neutral-400">
          {stats.stars !== undefined && (
            <span class="flex items-center gap-1">
              <span>‚≠ê</span>
              {stats.stars}
            </span>
          )}
          {stats.forks !== undefined && (
            <span class="flex items-center gap-1">
              <span>üç¥</span>
              {stats.forks}
            </span>
          )}
          {stats.openIssues !== undefined && (
            <span class="flex items-center gap-1">
              <span>üêõ</span>
              {stats.openIssues}
            </span>
          )}
          {stats.license && (
            <span class="flex items-center gap-1">
              <span>üìÑ</span>
              {stats.license}
            </span>
          )}
        </div>
      )
    }

    {
      technologies.length > 0 && (
        <div class="mt-2 flex flex-wrap gap-1">
          {technologies.map((tech) => (
            <span class="inline-block rounded-full bg-neutral-100 px-2 py-1 text-xs text-neutral-700 dark:bg-neutral-800 dark:text-neutral-300">
              {tech}
            </span>
          ))}
        </div>
      )
    }

    {
      category && (
        <div class="mt-2 text-xs text-neutral-500 dark:text-neutral-500">
          Category: {categoryLabels[category]}
        </div>
      )
    }

    <div
      class="text-accent-main group-hover:text-accent-hover mt-3 flex items-center gap-1 font-serif text-sm italic"
    >
      View Repository
      <ArrowRight class="h-4 w-4 fill-current" />
    </div>
  </div>
</a>
