"use strict";import{createCharacterSet as u,NodeCharacterClassKinds as N,NodeCharacterSetKinds as t,NodeTypes as l}from"../../parser/parse.js";const m={CharacterSet({node:s,parent:c,root:e,replaceWith:i}){const{kind:a,negate:r,value:n}=s;let p;a===t.property&&(n==="Decimal_Number"||n==="Nd")&&!e.flags.digitIsAscii&&!e.flags.posixIsAscii||a===t.posix&&n==="digit"?p=u(t.digit,{negate:r}):a===t.property&&(n==="ASCII_Hex_Digit"||n==="AHex")||a===t.posix&&n==="xdigit"?p=u(t.hex,{negate:r}):a===t.property&&(n==="White_Space"||n==="WSpace")&&!e.flags.spaceIsAscii&&!e.flags.posixIsAscii||a===t.posix&&n==="space"?p=u(t.space,{negate:r}):c.type!==l.CharacterClass&&a===t.property&&!r&&n==="Any"&&(p=u(t.any)),p&&i(p)},CharacterClass({node:s,root:c}){if(s.kind!==N.union)return;const e={rangeDigit0To9:!1,rangeAToFLower:!1,rangeAToFUpper:!1,unicodeL:!1,unicodeM:!1,unicodeN:!1,unicodePc:!1};for(const i of s.elements)i.type===l.CharacterClassRange?(e.rangeDigit0To9||=o(i,48,57),e.rangeAToFLower||=o(i,97,102),e.rangeAToFUpper||=o(i,65,70)):i.type===l.CharacterSet&&(e.unicodeL||=f(i,"L"),e.unicodeM||=f(i,"M"),e.unicodeN||=f(i,"N"),e.unicodePc||=f(i,"Pc",{supercategories:!0}));e.rangeDigit0To9&&e.rangeAToFUpper&&e.rangeAToFLower&&(s.elements=s.elements.filter(i=>!(o(i,48,57)||o(i,97,102)||o(i,65,70))),s.elements.push(u(t.hex))),e.unicodeL&&e.unicodeM&&e.unicodeN&&e.unicodePc&&!c.flags.wordIsAscii&&!c.flags.posixIsAscii&&(s.elements=s.elements.filter(i=>!f(i,["L","M","N","Pc"],{subcategories:!0})),s.elements.push(u(t.word)))}};function o(s,c,e){return s.type===l.CharacterClassRange&&s.min.value===c&&s.max.value===e}function f(s,c,e={}){const i=Array.isArray(c)?c:[c],a=[];for(const r of i)a.push(r),g[r]&&a.push(g[r]),e.supercategories&&h[r]&&(a.push(h[r]),g[h[r]]&&a.push(g[h[r]])),e.subcategories&&d[r]&&a.push(...d[r]);return s.type===l.CharacterSet&&s.kind===t.property&&!s.negate&&a.includes(s.value)}const g={L:"Letter",M:"Mark",N:"Number",P:"Punctuation"},h={Pc:"P"},d={L:["Ll","Lm","Lo","Lt","Lu"],M:["Mc","Me","Mn"],N:["Nd","Nl","No"]};export{o as isRange,m as useShorthands};
//# sourceMappingURL=use-shorthands.js.map
